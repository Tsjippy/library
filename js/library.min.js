(()=>{"use strict";let e,t;async function a(a){if(t=a.files.length,t<0)return;let s=new FormData;s.append("action","process_library_upload");for(let e=0;e<t;e++){let t=a.files[e];s.append("files[]",t)}if(null==s.get("files[]"))return;let o=new XMLHttpRequest;o.onreadystatechange=r,o.upload.addEventListener("progress",l,!1),o.open("POST",sim.ajaxUrl,!0),e.querySelectorAll(".loadergif_wrapper").forEach(e=>{e.classList.remove("hidden"),e.querySelectorAll(".uploadmessage").forEach(e=>{e.textContent="Preparing upload",e.classList.add("upload-message")})}),e.querySelector(".uploadmessage").textContent="Uploading Picture(s)",document.getElementById("progress-wrapper").classList.remove("hidden"),o.send(s)}function l(a){if(a.lengthComputable){let l=a.total,r=100*a.loaded/l;r=Math.round(10*r)/10,document.querySelectorAll("#upload_progress").forEach(e=>e.value=r),document.querySelectorAll("#progress_percentage").forEach(e=>e.textContent=`   ${r}%`),r>=99&&(document.getElementById("progress-wrapper").classList.add("hidden"),e.querySelectorAll(".uploadmessage").forEach(e=>{e.textContent=t>1?"Processing images":"Processing image"}))}}function r(t){let a=t.target;4==a.readyState&&(a.status>=200&&a.status<400?function(t){console.log(JSON.parse(t)),e.innerHTML=JSON.parse(t).data+e.innerHTML,Main.displayMessage("The files have been processed succesfully.","success",!0),e.querySelector(".image-selector-wrap").classList.remove("hidden");const a=new Event("uploadfinished");e.dispatchEvent(a),async function(){e.querySelectorAll("table tr").forEach(async e=>{!async function(e){try{if(null==e.querySelector(".title"))return;let t=e.querySelector(".title").value,a=e.querySelector(".author").value.split(", ")[0].split("and")[0].split("/")[0].split("with")[0].trim(),l="https://openlibrary.org/search.json?q="+encodeURIComponent(`title:${t}`);""!=a&&(l+=encodeURIComponent(` author:${a}`));const r=await fetch(l),s=await r.json();let o=s.docs[0]??[];if(""==a){let a=`authorlist-${t.replaceAll(" ","_")}`;e.querySelector(".author").setAttribute("list",a);let l=`<datalist id='${a}' class='author-selection'>`;console.log(s.docs),s.docs.forEach(e=>{null!=e.author_name&&(l+=`<option value='${e.author_name.join()}'>`)}),l+="</datalist>",e.querySelector(".author").insertAdjacentHTML("afterEnd",l)}else a=o.author_name??a,"object"==typeof a&&(a=a.join()??a),e.querySelector(".author").value=o.author_name??a;let n=o.cover_i??"";if(""!=n){let t=`https://covers.openlibrary.org/b/id/${n}-S.jpg`,a=`https://covers.openlibrary.org/b/id/${n}-L.jpg`;e.querySelector(".image").innerHTML=`<a href='${a}' target='_blank'><img src='${t}' class='book-image' loading='lazy'></a>`}let i=t.split(":")[1]??"",c=o.isbn_13??"";c=c[0]??c;let d=o.isbn_10??"";d=d[0]??d;let u=o.first_publish_year??"";u=u[0]??u;let p=o.language??"";p=p[0]??p;let m=`<td><input type='text' name='subtitle' class='subtitle' value='${i}'></td>`;m+=`<td class='hidden'><input type='text' name='isbn13' class='isbn13' value='${c}'></td>`,m+=`<td class='hidden'><input type='text' name='isbn10' class='isbn10' value='${d}'></td>`,m+=`<td><input type='text' name='series' class='series' value='${o.series??""}'></td>`,m+=`<td><input type='text' name='year' class='year' value='${u}'></td>`,m+=`<td><input type='text' name='language' class='language' value='${p}'></td>`,m+=`<td><input type='text' name='pages' class='pages' value='${o.number_of_pages??""}'></td>`,e.querySelector(".placeholder").outerHTML=m;let g=null!=o.description&&null!=o.description.value?o.description.value:"";""!=g&&(e.querySelector(".summary").value=g);let y=o.key??"";""!=y&&(l=`https://openlibrary.org${y}`,e.querySelector(".url").innerHTML=`<a href='${l}' target='_blank'>View on Open Library</a>`)}catch(e){console.error("Error fetching book data:",e)}}(e)})}()}(a.responseText):(console.error(a.responseText),Main.displayMessage(JSON.parse(a.responseText).error,"error")),document.querySelectorAll(".loadergif_wrapper").forEach(function(e){e.classList.add("hidden")}),e.querySelector('input[type="file"]').value="")}console.log("library.js loaded"),document.addEventListener("DOMContentLoaded",function(){}),document.addEventListener("click",e=>{let t=e.target;t.matches(".add-book")?async function(e){let t=e.closest("td"),a=e.closest("tr"),l=new FormData;a.querySelectorAll("input, textarea").forEach(e=>l.append(e.name,e.value)),a.querySelectorAll("td > img").forEach(e=>l.append("image",e.src)),console.log(e),e.classList.add("hidden"),t.querySelector(".loadergif_wrapper").classList.remove("hidden");let r=await FormSubmit.fetchRestApi("library/add_book",l);r?(console.log(r),t.innerHTML=r,Main.displayMessage(r.message)):(e.classList.remove("hidden"),t.querySelector(".loadergif_wrapper").classList.add("hidden"))}(t):t.matches(".delete-book")&&t.remove(),t.classList.contains("add_cat")&&document.getElementById("add_"+t.dataset.type+"_type").classList.remove("hidden"),t.matches(".add_category .form_submit")&&async function(e){let t=await FormSubmit.submitForm(e,"frontend_posting/add_category");if(t){e.closest("form").querySelector('[name="cat_parent"]').value;let a=e.closest("form").querySelector('[name="post_type"]').value,l=e.closest("form").querySelector('[name="cat_name"]').value,r=`\n\t\t<div class="infobox" undefined>\n\t\t\t<input type="checkbox" class="${a}type" id="${a}type[]" value="${t.id}" checked>\n\t\t\t<label class="option-label category-select">${l}</label>\n\t\t</div>\n\t\t`;(void 0).insertAdjacentHTML("afterBegin",r),Main.hideModals(),Main.displayMessage(`Succesfully added the ${l} category`)}}(t)}),document.addEventListener("change",t=>{let l=t.target;if("image-selector"==l.name){l.closest(".image-selector-wrap").classList.add("hidden"),e=l.closest(".file_upload_wrap"),e.querySelectorAll(".image-preview").forEach(e=>e.remove());for(const t of l.files){let r=new FileReader;r.onload=function(t){let a=document.createElement("div");a.classList.add("image-preview");let l=document.createElement("img");l.src=t.target.result,l.classList.add("book-image"),l.style.maxHeight="100px",a.appendChild(l),e.prepend(a)},r.readAsDataURL(t),a(l)}}})})();
//# sourceMappingURL=library.min.js.map